name: Django Docker CI/CD

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  COMPOSE_FILE: docker-compose.prod.yml

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        driver-opts: |
          image=moby/buildkit:master

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: self-hosted  # Self-hosted runner на машине с Vagrant
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Vagrant and Deploy
        run: |
          # Поднять Vagrant-машину (если не запущена)
          vagrant up
          
          # Выполнить деплой внутри Vagrant
          vagrant ssh -c "cd /vagrant && \
            docker compose -f ${{ env.COMPOSE_FILE }} pull && \
            docker compose -f ${{ env.COMPOSE_FILE }} down && \
            docker compose -f ${{ env.COMPOSE_FILE }} up -d --build"

      - name: Run Migrations
        run: vagrant ssh -c "cd /vagrant && docker compose exec web python manage.py migrate"

      - name: Collect Static
        run: vagrant ssh -c "cd /vagrant && docker compose exec web python manage.py collectstatic --noinput"
